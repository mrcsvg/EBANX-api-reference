type: object
title: Brazil üáßüá∑
description: "A JSON object that represents the payment."
required:
  - name
  - email
  - document
  - zipcode
  - address
  - street_number
  - city
  - state
  - phone_number
  - country
  - payment_type_code
  - merchant_payment_code
  - currency_code
  - amount_total
  - instalments
  - creditcard
properties:
  name:
    type: string
    description: "Customer name."
    minLength: 1
    maxLength: 100
    example: "Jos√© Silva"
  email:
    type: string
    description: "Customer email address."
    minLength: 5
    maxLength: 100
    example: "jose@example.com"
  document:
    type: string
    description: |
      Customer's document number.
      - **Brazil:** requires a valid CPF (natural person taxpayer ID) or CNPJ (business taxpayer ID).
    maxLength: 32
    example: "853.513.468-93"
  address:
    type: string
    description: "Customer address (street name)."
    example: "Rua E"
    minLength: 1
    maxLength: 100
  street_number:
    type: string
    description: "Customer street number."
    example: "1040"
    minLength: 1
    maxLength: 30
  city:
    type: string
    description: "Customer city."
    example: "Maracanau"
    minLength: 1
    maxLength: 80
  state:
    type: string
    description: |
      Customer state/region/province.
    enum:
      - AC
      - AL
      - AP
      - AM
      - BA
      - CE
      - DF
      - ES
      - GO
      - MA
      - MT
      - MS
      - MG
      - PA
      - PB
      - PR
      - PE
      - PI
      - RJ
      - RN
      - RS
      - RO
      - RR
      - SC
      - SP
      - SE
      - TO
    example: CE
  zipcode:
    type: string
    description: |
      Customer's zipcode.
    minLength: 8
    maxLength: 8
    example: "61919-230"
  country:
    type: string
    description: |
      The two-letter country code for the customer country. The available codes/countries are:
      - **BR:** Brazil.
    enum:
      - BR
    example: BR
  phone_number:
    type: string
    description: "Customer phone number. It is required for all countries."
    minLength: 10
    maxLength: 15
    example: 8522847035
  payment_type_code:
    type: string
    description: |
      The value of this field always will be creditcard for credit card transactions.
    example: "creditcard"
    enum: 
      - creditcard
  merchant_payment_code:
    type: string
    description: "The payment hash Merchant Payment Code (unique merchant ID)."
    example: "3ad1f4096a2"
  currency_code:
    type: string
    description: |
      Three-letter code of the payment currency. 
      Supported currencies: 
      - BRL 
      - EUR 
      - USD
    enum:
      - BRL
      - EUR
      - USD
    example: "BRL"
    minLength: 3
    maxLength: 3
  instalments:
    type: integer
    description: |
      The number of instalments of the amount (from 1 to 12). 
      When using American Express and ELO are allowed only to use 1-6 instalments.
    example: "3"
  amount_total:
    type: number
    description: "The amount in the specified currency (currency_code)."
    example: "100"
  creditcard:
    type: object
    required:
      - card_number
      - card_name
      - card_due_date
      - card_cvv
    properties:
      card_number:
        type: string
        description: "Credit card number."
        example: "4111111111111111"
        minLength: 14
        maxLength: 19
      card_name:
        type: string
        description: "Credit card cardholder name."
        example: "Jos√© Silva"
        maxLength: 50
      card_due_date:
        type: string
        description: "Credit card due date (‚Äúvalid thru‚Äù) in the format mm/yyyy."
        example: "12/2019"
        minLength: 7
        maxLength: 7
      card_cvv:
        type: string
        description: "Credit card security code."
        example: "123"
        minLength: 3
        maxLength: 4
      auto_capture:
        type: boolean
        description: |
          If true, the payment will be captured automatically by EBANX; if false, the payment will have to be captured by the merchant using the API method capture.